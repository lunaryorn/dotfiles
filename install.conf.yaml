# Configuration file for Unix systems
#
# Since Windows is so special, it has its own config file in
# windows/install.conf.yaml which does not share anything with this file.

- defaults:
    link:
      create: true
      relink: true
- clean:
    # Prune dead symlinks in these directories
    - "~/.local/bin/"
    - "~/.config/fish"
    - "~/.config/fish/functions"
    - "~/.config/fish/conf.d"
    - "~/.config/git"
    - "~/.sbt/1.0/"
    - "~/.sbt/1.0/plugins"
    - "~/.ssh/config.d"
- link:
    # Fish shell config files
    ~/.config/fish/config.fish: fish/config.fish
    ~/.config/fish/functions/fisher.fish: submodules/fisher/fisher.fish
    ~/.config/fish/fishfile: fish/fishfile
    ~/.config/fish/functions:
      path: fish/functions/*.fish
      glob: true

    # Binaries
    ~/.local/bin:
      path: bin/*
      glob: true

    # VIM
    ~/.ideavimrc: vim/ideavimrc
    ~/.config/nvim/init.vim: vim/init.vim
    # VIM plugins
    ~/.local/share/nvim/site/pack/dotfiles/start/vim-toml: submodules/nvim/vim-toml

    # Git config files and tools
    ~/.config/git/config: git/config
    ~/.config/git/ignore: git/ignore
    ~/.config/git/attributes: git/attributes
    ~/.config/git/config.linux:
      path: git/config.linux
      if: "uname -s | grep -qi linux"

    # Scala configuration
    ~/.ammonite/predef.sc: scala/ammonite-predef.sc
    ~/.sbt/1.0/settings.sbt: scala/settings.sbt
    ~/.sbt/1.0/plugins/plugins.sbt: scala/plugins.sbt
    ~/.sbt/1.0/plugins/sbt-updates.sbt: scala/sbt-updates.sbt
    ~/.sbt/1.0/plugins/project/sbt-updates.sbt: scala/sbt-updates.sbt

    # Latex
    ~/.config/latexmk/latexmkrc: latex/latexmkrc

    # Misc unix tools
    ~/.config/bat/config: misc/bat
    # SSH
    ~/.ssh/config: ssh/config
    ~/.ssh/config.d/:
      path: ssh/config.d/*
      glob: true

    # Linux configuration (basic)
    ~/.local/bin/reset-thunderbolt.bash:
      path: misc/reset-thunderbolt.bash
      if: "uname -s | grep -qi linux"

    # Gnome
    ~/.local/share/gnome-shell/extensions/home@swsnr.de:
      path: gnome/extensions/home@swsnr.de
      if: "uname -s | grep -qi linux"

    # X11 settings: xprofile for i3 environment, Xresources for some X11 settings
    # and dynamic i3 themeing, and xinitrc to start an X11 instance with i3wm
    # from xrdp.
    ~/.xprofile:
      path: x11/xprofile.sh
    ~/.Xresources:
      path: x11/Xresources
    # X11 nightlight
    ~/.config/redshift.conf: misc/redshift.conf
    # i3 with custom scripts
    ~/.config/i3/config:
      path: i3/config
      if: "i3 --version | grep -qi 'i3 version'"
    # i3 themes, including my default theme
    ~/.config/i3/themes:
      path: i3/themes/*
      glob: true
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.config/i3/themes/current:
      path: i3/themes/adwaita-dark
      if: "i3 --version | grep -qi 'i3 version'"
    # i3 scripts and tools
    ~/.local/bin/i3-touchpad:
      path: i3/bin/i3-touchpad.bash
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-rofi:
      path: i3/bin/i3-rofi.bash
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-rename-workspace:
      path: i3/bin/i3-rename-workspace
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-wallpaper-service:
      path: i3/bin/i3-wallpaper-service.py
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-lock-screen:
      path: i3/bin/i3-lock-screen.py
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-set-session-locked:
      path: i3/bin/i3-set-session-locked.py
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/i3-exit:
      path: i3/bin/i3-exit.py
      if: "i3 --version | grep -qi 'i3 version'"
    # i3 blocks for the status bar
    ~/.config/i3blocks/config:
      path: i3/i3blocks.conf
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.config/i3blocks/blocklets:
      path: i3/blocklets/*
      glob: true
      if: "i3 --version | grep -qi 'i3 version'"
    # Notification daemon
    ~/.config/dunst/dunstrc:
      path: i3/dunstrc
      if: "i3 --version | grep -qi 'i3 version'"
    # Extra modes for Rofi launcher
    ~/.local/bin/rofi-idea-projects:
      path: i3/bin/rofi-idea-projects
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/rofi-code-projects:
      path: i3/bin/rofi-code-projects
      if: "i3 --version | grep -qi 'i3 version'"
    ~/.local/bin/rofi-yes-no:
      path: i3/bin/rofi-yes-no.bash
      if: "i3 --version | grep -qi 'i3 version'"

    # Kitty terminal emulator
    ~/.config/kitty/:
      path: kitty/*.conf
      glob: true

    # ZIM style configuration
    ~/.config/zim/style.conf: misc/zim-style.conf
    # Alacritty terminal
    ~/.config/alacritty/alacritty.yml: misc/alacritty.yml
    # Udiskie device manager for i3
    ~/.config/udiskie/config.yml: misc/udiskie-config.yml
    # Make python keyring pick the proper backend
    ~/.config/python_keyring/keyringrc.cfg: misc/keyringrc.cfg
    # GPG configuration (because its defaults are as bad as the software itself)
    ~/.gnupg/gpg.conf: misc/gpg.conf

- gsettings:
    org.gnome.desktop.interface:
      # Disable hot corner
      enable-hot-corners: false
      # Show date and weekday in clock
      clock-show-date: true
      clock-show-weekday: true
      # Disable Ctrl shortcut for locating the cursor; conflicts with
      # IntelliJs Ctrl shortcut to add multiple cursors
      locate-pointer: false
    org.gnome.mutter:
      # Extend workspaces to all displays
      workspaces-only-on-primary: false
    org.gnome.shell.app-switcher:
      # Limit app and window switcher to current workspace
      current-workspace-only: true
    org.gnome.system.location:
      # Enable location service
      enabled: true
    org.gnome.desktop.peripherals.keyboard:
      remember-numlock-state: false
      numlock-state: true
    org.gnome.desktop.calendar:
      # Show week numbers in calendar
      show-weekdate: true
    org.gnome.desktop.wm.keybindings:
      close: [<Alt>F4, <Super>F4]
      # Replace app switching with window switching
      switch-applications: []
      switch-applications-backward: []
      switch-windows: ['<Super>Tab', '<Alt>Tab']
      switch-windows-backward: ['<Shift><Super>Tab', '<Shift><Alt>Tab']
      # Toggle fullscreen mode for apps
      toggle-fullscreen: ['<Super>Return']
      # Keep on top above all other windows
      always-on-top: ['<Shift><Super>t']
      toggle-on-all-workspaces: ['<Super>period']
      # Disable input method switching wtih Super+Space
      switch-input-source: ['XF86Keyboard']
      switch-input-source-backward: ['<Shift>XF86Keyboard']
    org.gnome.shell.extensions.dash-to-dock:
      # extend the dock across all workspaces and fix it to the left side.
      isolate-workspaces: false
      dock-fixed: true
    org.gnome.shell.extensions.arch-update:
      check-cmd: /bin/sh -c '/usr/bin/checkupdates; aur repo -ud aur; flatpak remote-ls --updates'
      update-cmd: gnome-terminal -e 'sh -c  "aur sync -cu; sudo pacman -Syu; flatpak update; echo Done - Press enter to exit; read" '
- gnome_terminal_profile:
    audible-bell: false
    bold-is-bright: false
    default-size-columns: 120
    default-size-rows: 40
    font: 'PragmataPro Mono Liga 11'
    use-system-font: false
    visible-name: 'Shell'
- gnome_bindings:
    terminal:
      name: Start Terminal
      command: gnome-terminal --tab
      binding: <Super>t
